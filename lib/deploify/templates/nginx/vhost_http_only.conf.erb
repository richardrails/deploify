upstream <%= nginx_upstream_name %> {
<% nginx_upstream_servers.each do |srv| -%>
  server <%= srv %>;
<% end -%>
}

server {
  listen <%= nginx_vhost_listen_ip %><%= ':' unless nginx_vhost_listen_ip.nil? %>80;
  server_name <%= domain %> <%= Array(web_server_aliases).join(' ') %>;
  root <%= deploy_to %>/current/public;
  client_max_body_size <%= nginx_client_max_body_size %>;
  access_log <%= shared_path %>/log/access.log;
  error_log <%= shared_path %>/log/error.log;

  <%- if force_domain_with_www -%>
  if ($host !~* ^www.<%= domain %>$) {
    rewrite ^(.*) http://www.<%= domain %>$1 permanent;
  }
  <%- end -%>

  location / {
    <%- if nginx_secured_site -%>
    auth_basic "Limited access";
    auth_basic_user_file <%= "#{deploy_to}/nginx/.htaccess" %>;
    <%- end -%>
    try_files $uri/index.html $uri @upstream;
  }

  location @upstream {
    proxy_pass http://<%= nginx_upstream_name %>;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto http;
  }

  # this allows people to use images and css in their maintenance.html file
  if ($request_filename ~* \.(css|jpg|gif|png)$) {
    break;
  }

  # rewrite all the requests to the maintenance.html page if it exists
  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  # set Expire header on assets
  location ~ ^/(images|javascripts|stylesheets)/ {
    if ($request_method = GET) {
      expires 1y;
    }
  }
  location ~ ^/assets/ {
    expires max;
    add_header Cache-Control public;
    add_header ETag "";
    break;
  }

  error_page 404 /404.html;
  error_page 500 502 504 /500.html;
  error_page 503 @503;
  location @503 {
    rewrite  ^(.*)$ /system/maintenance.html break;
  }
}
